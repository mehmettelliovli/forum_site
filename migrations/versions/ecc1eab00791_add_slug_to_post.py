"""Add slug to Post

Revision ID: ecc1eab00791
Revises: 0e1914a0ecdf
Create Date: 2025-07-03 16:16:48.261579

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.sql import table, column
from sqlalchemy import String, Integer


# revision identifiers, used by Alembic.
revision: str = 'ecc1eab00791'
down_revision: Union[str, None] = '0e1914a0ecdf'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # 1. Slug sütununu nullable olarak ekle
    op.add_column('post', sa.Column('slug', sa.String(length=220), nullable=True))
    # 2. Var olan postlara otomatik slug ata (id ve title'dan)
    conn = op.get_bind()
    results = conn.execute(sa.text('SELECT id, title FROM post'))
    for row in results:
        import re
        def slugify(text):
            text = re.sub(r'[^\w\s-]', '', text).strip().lower()
            text = re.sub(r'[-\s]+', '-', text)
            return text
        slug = slugify(row.title)
        if not slug:
            slug = f'post-{row.id}'
        # id ekleyerek benzersizliği garanti altına al
        slug = f"{slug}-{row.id}"
        conn.execute(sa.text('UPDATE post SET slug = :slug WHERE id = :id'), {'slug': slug, 'id': row.id})
    # 3. Slug sütununu NOT NULL yap ve unique constraint ekle
    op.alter_column('post', 'slug', nullable=False)
    op.create_unique_constraint(None, 'post', ['slug'])


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'post', type_='unique')
    op.drop_column('post', 'slug')
    # ### end Alembic commands ###
